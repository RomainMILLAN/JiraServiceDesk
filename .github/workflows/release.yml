name: Build and Release Static Binary

on:
  push:
    tags:
      - 'v*'

jobs:
  generate-changelog:
    name: Generate changelog
    runs-on: ubuntu-latest
    outputs:
      release_body: ${{ steps.git-cliff.outputs.content }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Generate changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: --latest --strip header
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

  build:
    name: Build (Assets + Binary)
    runs-on: ubuntu-latest
    outputs:
      assets_success: ${{ steps.assets_success.outputs.success }}
      binary_success: ${{ steps.binary_success.outputs.success }}
    steps:
      - uses: actions/checkout@v4

      # --- Assets build ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Build assets (continue on error)
        id: build_assets
        continue-on-error: true
        run: |
          yarn install
          yarn build
          mkdir -p release
          zip -r release/assets-builded.zip public/build

      - name: Mark assets build status
        id: assets_success
        run: |
          if [ -f release/assets-builded.zip ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      # --- Binary build ---
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build binary (continue on error)
        id: build_binary
        continue-on-error: true
        run: |
          docker build -f static-build.Dockerfile -t app-template .
          mkdir -p release
          docker run --rm -v ${{ github.workspace }}/release:/out app-template cp /go/src/app/dist/frankenphp-linux-x86_64 /out/app-template || true

      - name: Mark binary build status
        id: binary_success
        run: |
          if [ -f release/app-template ]; then
            echo "success=true" >> $GITHUB_OUTPUT
          else
            echo "success=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release/

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [generate-changelog, build]
    if: always()  # S'assure qu'on passe même si build a échoué
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: release
          path: release

      - name: List files for debug
        run: ls -lh release

      - name: Create GitHub Release with what exists
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref }}
          name: "Release ${{ github.ref }}"
          body: ${{ needs.generate-changelog.outputs.release_body }}
          files: |
            release/app-template
            release/assets-builded.zip
        env:
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
