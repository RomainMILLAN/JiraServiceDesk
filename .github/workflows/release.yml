name: Build and Release Static Binary

on:
  push:
    tags:
      - 'v*'  # Déclenche le workflow pour chaque nouveau tag (ex : v1.0.0)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout du code
      - name: Checkout code
        uses: actions/checkout@v2

      # 2. Configurer Docker Buildx pour les architectures multi-plateformes
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Construction de l'image Docker avec le Dockerfile
      - name: Build Docker image with static-build.Dockerfile
        run: |
          docker build -f Dockerfile -t my-symfony-app .

      # 4. Créer le répertoire de release
      - name: Create release directory
        run: mkdir release

      # 5. Copier l'exécutable statique dans le répertoire de release
      - name: Copy executable to release directory
        run: |
          docker run --rm my-symfony-app cp /usr/local/bin/my-symfony-app ./release/my-symfony-app

      # 6. Upload de l'exécutable comme artefact
      - name: Upload executable as artifact
        uses: actions/upload-artifact@v3
        with:
          name: executable
          path: ./release/my-symfony-app
