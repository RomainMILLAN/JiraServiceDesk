From 6b0c51cb9097626835da772f6a29a61387c1b930 Mon Sep 17 00:00:00 2001
From: Romain MILLAN <rmillan@spiriit.com>
Date: Tue, 13 May 2025 12:11:30 +0200
Subject: [PATCH 1/3] feat(project): Add a function to get all project roles

---
 README.md                      | 25 +++++++++++++++++++++++++
 src/Project/ProjectService.php | 19 +++++++++++++++++++
 tests/ProjectTest.php          | 19 +++++++++++++++++++
 3 files changed, 63 insertions(+)

diff --git a/README.md b/README.md
index fe53b53..7fadf7c 100644
--- a/README.md
+++ b/README.md
@@ -124,6 +124,7 @@ $iss = new IssueService(new ArrayConfiguration(
 - [Get Project Components](#get-project-components)
 - [Get Project Type](#get-project-type)
 - [Get Project Version](#get-project-version)
+- [Get Project Roles]()
 
 ### Custom Field
 - [Get All Field list](#get-all-field-list)
@@ -491,6 +492,30 @@ try {
 ```
 
 
+#### Get Project Roles
+
+[See Jira API reference](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-project-roles/#api-rest-api-3-project-projectidorkey-role-get)
+
+```php
+<?php
+require 'vendor/autoload.php';
+
+use JiraCloud\Project\ProjectService;
+use JiraCloud\JiraException;
+
+try {
+    $projectService = new ProjectService();
+
+    // return project roles list. 
+    $ret = $projectService->getProjectRoles('TEST'); 
+    	
+    var_dump($ret);
+} catch (JiraCloud\JiraException $e) {
+	print('Error Occurred! ' . $e->getMessage());
+}
+```
+
+
 #### Get All Field List
 
 [See Jira API reference](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-issue-fields/#api-rest-api-3-field-get)
diff --git a/src/Project/ProjectService.php b/src/Project/ProjectService.php
index 0fbf013..220f749 100644
--- a/src/Project/ProjectService.php
+++ b/src/Project/ProjectService.php
@@ -392,4 +392,23 @@ public function archiveProject($projectIdOrKey)
 
         return $ret;
     }
+
+    /**
+     * @param $projectIdOrKey
+     *
+     * @throws JiraException
+     *
+     * @return array<string, string>
+     *
+     * STATUS 401 Returned if the user is not logged in.
+     * STATUS 404 - Returned if the project does not exist.
+     */
+    public function getProjectRoles($projectIdOrKey)
+    {
+        $response = $this->exec($this->uri.'/'.$projectIdOrKey.'/role');
+
+        $this->log->info('getProjectRoles Result='.$response);
+
+        return (array) json_decode($response);
+    }
 }
diff --git a/tests/ProjectTest.php b/tests/ProjectTest.php
index c48456c..2ccca4f 100644
--- a/tests/ProjectTest.php
+++ b/tests/ProjectTest.php
@@ -202,4 +202,23 @@ public function get_unknown_project_type_expect_to_JiraException(string $projKey
 
         return $projKey;
     }
+
+    /**
+     * @test
+     * @depends get_project_lists
+     */
+    public function get_project_roles_array(string $projKey): string
+    {
+        try {
+            $projectService = new ProjectService();
+
+            $roles = $projectService->getProjectRoles($projKey);
+
+            $this->assertIsArray($roles);
+        } catch (JiraException $e) {
+            $this->fail('get_project_roles_array ' . $e->getMessage());
+        }
+
+        return $projKey;
+    }
 }

From 3b447a09e76ae6e01b90140bed9104312d715f2b Mon Sep 17 00:00:00 2001
From: Romain MILLAN <rmillan@spiriit.com>
Date: Tue, 13 May 2025 12:57:55 +0200
Subject: [PATCH 2/3] feat(role): Get project role id info

---
 README.md                      | 26 +++++++++++++++++++++--
 src/Project/ProjectService.php | 39 ++++++++++++++++++++++++++++++++++
 src/Role/Role.php              | 19 +++++++++++++++++
 tests/ProjectTest.php          | 36 +++++++++++++++++++++++++++++--
 4 files changed, 116 insertions(+), 4 deletions(-)
 create mode 100644 src/Role/Role.php

diff --git a/README.md b/README.md
index 7fadf7c..467072c 100644
--- a/README.md
+++ b/README.md
@@ -124,7 +124,8 @@ $iss = new IssueService(new ArrayConfiguration(
 - [Get Project Components](#get-project-components)
 - [Get Project Type](#get-project-type)
 - [Get Project Version](#get-project-version)
-- [Get Project Roles]()
+- [Get Project Roles](#get-project-roles)
+- [Get Project Role](#get-project-role)
 
 ### Custom Field
 - [Get All Field list](#get-all-field-list)
@@ -491,7 +492,6 @@ try {
 
 ```
 
-
 #### Get Project Roles
 
 [See Jira API reference](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-project-roles/#api-rest-api-3-project-projectidorkey-role-get)
@@ -515,6 +515,28 @@ try {
 }
 ```
 
+#### Get Project Role
+
+[See Jira API reference](https://developer.atlassian.com/cloud/jira/platform/rest/v3/api-group-project-roles/#api-rest-api-3-project-projectidorkey-role-id-get)
+
+```php
+<?php
+require 'vendor/autoload.php';
+
+use JiraCloud\Project\ProjectService;
+use JiraCloud\JiraException;
+
+try {
+    $projectService = new ProjectService();
+
+    // return project role data with reporter assigned. 
+    $ret = $projectService->getProjectRoles('TEST', '1'); 
+    	
+    var_dump($ret);
+} catch (JiraCloud\JiraException $e) {
+	print('Error Occurred! ' . $e->getMessage());
+}
+```
 
 #### Get All Field List
 
diff --git a/src/Project/ProjectService.php b/src/Project/ProjectService.php
index 220f749..7041653 100644
--- a/src/Project/ProjectService.php
+++ b/src/Project/ProjectService.php
@@ -7,6 +7,7 @@
 use JiraCloud\Issue\Reporter;
 use JiraCloud\Issue\Version;
 use JiraCloud\JiraException;
+use JiraCloud\Role\Role;
 
 class ProjectService extends \JiraCloud\JiraClient
 {
@@ -411,4 +412,42 @@ public function getProjectRoles($projectIdOrKey)
 
         return (array) json_decode($response);
     }
+
+    /**
+     * @param $projectIdOrKey
+     * @param $roleId
+     *
+     * @throws JiraException
+     *
+     * @return Role
+     *
+     * STATUS 401 Returned if the user is not logged in.
+     * STATUS 404 - Returned if the project does not exist.
+     */
+    public function getProjectRole($projectIdOrKey, $roleId, $excludeInactiveUsers = false)
+    {
+        $response = $this->exec($this->uri.'/'.$projectIdOrKey.'/role/'.$roleId.'?excludeInactiveUsers='.$excludeInactiveUsers);
+
+        $this->log->info('getProjectRole Result='.$response);
+
+        $reporters = array_map(
+            function ($elem) {
+                $reporter = $this->json_mapper->map($elem, new Reporter());
+                $reporter->accountId = $elem->actorUser->accountId;
+
+                return $reporter;
+            },
+            array_filter(json_decode($response)->actors, function ($elem) {
+                return $elem->type === "atlassian-user-role-actor";
+            }),
+        );
+
+        $role = $this->json_mapper->map(
+            json_decode($response),
+            new Role()
+        );
+        $role->actors = $reporters;
+
+        return $role;
+    }
 }
diff --git a/src/Role/Role.php b/src/Role/Role.php
new file mode 100644
index 0000000..011f716
--- /dev/null
+++ b/src/Role/Role.php
@@ -0,0 +1,19 @@
+<?php
+
+namespace JiraCloud\Role;
+
+use JiraCloud\ClassSerialize;
+use JiraCloud\Issue\Reporter;
+
+class Role
+{
+    use ClassSerialize;
+
+    public string $name;
+    public int $id;
+    public string $description;
+    public string $self;
+
+    public array $actors;
+
+}
diff --git a/tests/ProjectTest.php b/tests/ProjectTest.php
index 2ccca4f..0cf2203 100644
--- a/tests/ProjectTest.php
+++ b/tests/ProjectTest.php
@@ -7,6 +7,7 @@
 use JiraCloud\JiraException;
 use JiraCloud\Project\Project;
 use JiraCloud\Project\ProjectType;
+use JiraCloud\Role\Role;
 use PHPUnit\Framework\TestCase;
 use JiraCloud\Project\ProjectService;
 
@@ -207,7 +208,7 @@ public function get_unknown_project_type_expect_to_JiraException(string $projKey
      * @test
      * @depends get_project_lists
      */
-    public function get_project_roles_array(string $projKey): string
+    public function get_project_roles_array(string $projKey): array
     {
         try {
             $projectService = new ProjectService();
@@ -215,10 +216,41 @@ public function get_project_roles_array(string $projKey): string
             $roles = $projectService->getProjectRoles($projKey);
 
             $this->assertIsArray($roles);
+
+            $parts = explode('/', rtrim(array_shift($roles), '/'));
+            $roleId = end($parts);
         } catch (JiraException $e) {
             $this->fail('get_project_roles_array ' . $e->getMessage());
         }
 
-        return $projKey;
+        return ['projKey' => 'JUL', 'roleId' => $roleId];
+    }
+
+    /**
+     * @test
+     * @depends get_project_roles_array
+     * @param array<string, string> $datas
+     *      projKey: project key
+     *      roleId: role id
+     *
+     * @return string
+     * @throws \JsonMapper_Exception
+     */
+    public function get_project_role(array $datas): string
+    {
+        try {
+            $projectService = new ProjectService();
+
+            $role = $projectService->getProjectRole($datas['projKey'], $datas['roleId'], true);
+
+            self::assertInstanceOf(Role::class, $role);
+            self::assertIsString($role->name);
+            self::assertIsString($role->description);
+            self::assertIsInt($role->id);
+        } catch (JiraException $e) {
+            $this->fail('get_project_role ' . $e->getMessage());
+        }
+
+        return '$projKey';
     }
 }

From 9fa4b06da78e9a5b41d78f34af08253850997393 Mon Sep 17 00:00:00 2001
From: Romain MILLAN <rmillan@spiriit.com>
Date: Tue, 13 May 2025 13:00:55 +0200
Subject: [PATCH 3/3] fix: Fix StyleCI

---
 src/Project/ProjectService.php | 2 +-
 src/Role/Role.php              | 3 ---
 2 files changed, 1 insertion(+), 4 deletions(-)

diff --git a/src/Project/ProjectService.php b/src/Project/ProjectService.php
index 7041653..c385dbd 100644
--- a/src/Project/ProjectService.php
+++ b/src/Project/ProjectService.php
@@ -438,7 +438,7 @@ function ($elem) {
                 return $reporter;
             },
             array_filter(json_decode($response)->actors, function ($elem) {
-                return $elem->type === "atlassian-user-role-actor";
+                return $elem->type === 'atlassian-user-role-actor';
             }),
         );
 
diff --git a/src/Role/Role.php b/src/Role/Role.php
index 011f716..e7f08b5 100644
--- a/src/Role/Role.php
+++ b/src/Role/Role.php
@@ -3,7 +3,6 @@
 namespace JiraCloud\Role;
 
 use JiraCloud\ClassSerialize;
-use JiraCloud\Issue\Reporter;
 
 class Role
 {
@@ -13,7 +12,5 @@ class Role
     public int $id;
     public string $description;
     public string $self;
-
     public array $actors;
-
 }
